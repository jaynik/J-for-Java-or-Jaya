package com.prac.hashmap;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

/* Find whether an array is subset of another array */

class Solution1
{
	/* Using normal approach */
	/*public boolean arraysub()
	{
		boolean res=true;
		int arr1[]={10, 5, 2, 23, 19};
		int[] arr2={19, 5, 3};
		
		Arrays.sort(arr1);
		Arrays.sort(arr2);
		
		for(int i=0,j=0;j<arr2.length;)
		{
			if(arr1[i]>arr2[j])
				return false;
			else if(arr1[i]==arr2[j])
			{
				i++;
				j++;
			}
			else
				i++;
			
			
		}
		
		return res;
	}*/
	
	/* Using hashset */
	public boolean arraysub()
	{
		Set<Integer> s=new HashSet<Integer>();
		int arr1[]={10, 5, 2, 23, 19};
		int[] arr2={19, 5, 3};
		
		for(int i=0;i<arr1.length;i++)
		{
			if(!s.contains(arr1[0]))
				s.add(arr1[0]);
		}
		
		for(int i=0;i<arr2.length;i++)
		{
			if(!s.contains(arr2[0]))
				return false;
		}
		return true;
	}
}
public class Ex1 {

	public static void main(String[] args) {
		Solution1 s1=new Solution1();
		boolean res=s1.arraysub();
		System.out.println(res);
	}

}
