package com.prac.strings;
/* 859. Buddy Strings
Given two strings A and B of lowercase letters, return true if and only if 
we can swap two letters in A so that the result equals B.*/
class Solution1
{
	public boolean buddyStrings(String A, String B) {
		int An=A.length();
        int Bn=B.length();
        char x1=' ';
        char x2=' ';
        int cnt=0;
        boolean flag=false;
        
        if(An!=Bn)
            return false;
       
         else if(A.equals(B))
        {
        	int[] count = new int[26];
            for (int i = 0; i < A.length(); ++i)
                count[A.charAt(i) - 'a']++;

            for (int c: count)
                if (c > 1) return true;
            return false;
        }
       
        else
        {
            for(int i=0;i<An;i++)
            {
                if(A.charAt(i)-B.charAt(i)!=0)
                {
                    if(flag!=true)
                    {
	                	if(x1!=' ' && x2!=' ' && x1==B.charAt(i) &&  x2==A.charAt(i))
	                    {
	                    	flag=true;
	                    }
	                    else
	                    {
	                    	x1=A.charAt(i);
	                    	x2=B.charAt(i);  
	                    }
                    }
                    else
                    {
                    	return false;
                    }
                }
            }
            
        }
        if(flag==true)
        	return true;
        else
        	return false;
    
	}
}
public class Ex1 {

	public static void main(String[] args) {
		Solution1 s1=new Solution1();
		String A="abcd";
		String B="badc";
		boolean res=s1.buddyStrings(A, B);
		System.out.println(res);
	}

}
