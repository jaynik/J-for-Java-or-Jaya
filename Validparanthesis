package com.prac.strings;
/* 20. Valid Parentheses*/
import java.util.Stack;

class Solution7
{
	public boolean isValid(String s) {
	Stack<Character> ss=new Stack<Character>();
	int n=s.length();
	
	for(int i=0;i<n;i++)
	{
		switch(s.charAt(i))
		{
		case '(': ss.push(s.charAt(i));
					break;
		case '{': ss.push(s.charAt(i));
					break;
		case '[': ss.push(s.charAt(i));
					break;
		case ')': 
			if(ss.peek()=='(')
				ss.pop();		
			else
				ss.push(s.charAt(i));
					break;
		case '}': 
			if(ss.peek()=='{')
				ss.pop();		
			else
				ss.push(s.charAt(i));
				break;
		case ']': 
			if(ss.peek()=='[')
				ss.pop();		
			else
				ss.push(s.charAt(i));
				break;		
		}
	}
	
		/*
		 * while(!ss.isEmpty()) { System.out.println(ss.pop()); }
		 */
	
	if(ss.isEmpty())
		return true;
	else
		return false;
	
    }
}
public class Ex7 {

	public static void main(String[] args) {
		Solution7 s7=new Solution7();
		String s="{[]}";
		boolean res=s7.isValid(s);	
		System.out.println(res);
	}

}
